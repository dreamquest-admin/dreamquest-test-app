name: Production Deployment

on:
  push:
    branches: [ main ]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/dreamquest-test-app:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/dreamquest-test-app:${{ github.sha }}
          
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y jq
      
    - name: Deploy to Portainer
      run: |
        # Encode compose file
        COMPOSE_CONTENT=$(cat docker-compose.prod.yml | jq -Rs . | sed 's/^"//;s/"$//')
        
        # Prepare environment variables
        ENV_JSON=$(jq -n \
          --arg tag "${{ github.sha }}" \
          --arg db_name "${{ secrets.DB_NAME }}" \
          --arg db_user "${{ secrets.DB_USER }}" \
          --arg db_pass "${{ secrets.DB_PASSWORD }}" \
          '[
            {"name": "TAG", "value": $tag},
            {"name": "DB_NAME", "value": $db_name},
            {"name": "DB_USER", "value": $db_user},
            {"name": "DB_PASSWORD", "value": $db_pass}
          ]')
        
        # Create/update stack
        RESPONSE=$(curl -s -X POST "${{ secrets.PORTAINER_URL }}/api/stacks?method=repository&type=2&endpointId=${{ secrets.PORTAINER_ENDPOINT_ID }}" \
          -H "X-API-Key: ${{ secrets.PORTAINER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "dreamquest-test",
            "stackFileContent": "'"$COMPOSE_CONTENT"'",
            "env": '"$ENV_JSON"',
            "prune": true,
            "pullImage": true
          }')
        
        echo "Deployment response: $RESPONSE"
