name: Production Deployment

on:
  push:
    branches: [ main ]

jobs:
  build-push-deploy:
    runs-on: ubuntu-22.04
    environment: dq-nas
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Docker Hub Login
      run: |
        docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}" docker.io
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          dreamquest/dreamquest-test-app:latest
          dreamquest/dreamquest-test-app:${{ github.sha }}
          
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.NAS_IP }}
        username: ${{ secrets.NAS_USER }}
        key: ${{ secrets.NAS_SSH_KEY }}
        script: |
          # UGREEN-specific paths
          APP_DIR="/volume1/docker/dreamquest-test-app"
          sudo mkdir -p $APP_DIR
          cd $APP_DIR
          
          # Write compose file
          cat << 'EOF' > docker-compose.prod.yml
          version: '3.8'
          services:
            app:
              image: dreamquest/dreamquest-test-app:${{ github.sha }}
              environment:
                - DB_HOST=postgres
                - DB_NAME=${{ secrets.DB_NAME }}
                - DB_USER=${{ secrets.DB_USER }}
                - DB_PASSWORD=${{ secrets.DB_PASSWORD }}
              ports:
                - "8000:8000"
              depends_on:
                - postgres
                
            postgres:
              image: postgres:15
              environment:
                - POSTGRES_DB=${{ secrets.DB_NAME }}
                - POSTGRES_USER=${{ secrets.DB_USER }}
                - POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}
              volumes:
                - $APP_DIR/postgres_data:/var/lib/postgresql/data
